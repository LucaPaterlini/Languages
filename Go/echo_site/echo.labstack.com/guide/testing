<!doctype html>
<html lang="en-us">
<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="description" content="Testing handler and middleware in Echo | Echo is a high performance, extensible, minimalist web framework for Go (Golang).">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:site" content="@echo">
  <meta name="twitter:creator" content="@labstack">
  <meta name="twitter:title" content="Testing | Echo - High performance, minimalist Go web framework">
  <meta name="twitter:description" content="Testing handler and middleware in Echo | Echo is a high performance, extensible, minimalist web framework for Go (Golang).">
  <meta name="twitter:image" content="https://echo.labstack.com/images/share.png">
  <meta property="og:type" content="website">
  <meta property="og:site_name" content="Testing">
  <meta property="og:title" content="Testing | Echo - High performance, minimalist Go web framework">
  <meta property="og:description" content="Testing handler and middleware in Echo | Echo is a high performance, extensible, minimalist web framework for Go (Golang).">
  <meta property="og:url" content="https://echo.labstack.com">
  <meta property="og:image" content="https://echo.labstack.com/images/share.png">
  <title>
    Testing | Echo - High performance, minimalist Go web framework
  </title>
  <link rel="stylesheet"  
    href="https://unpkg.com/font-awesome@4.6.3/css/font-awesome.min.css">
  <link rel="stylesheet"
    href="https://cdn.labstack.com/css/icomoon.css">
  <link rel="stylesheet" 
    href="https://unpkg.com/docsearch.js@2.2.1/dist/cdn/docsearch.min.css">
  <link rel="stylesheet" href="../css/bsa.css">
  <link rel="stylesheet" href="https://cdn.labstack.com/css/w3.css">
  <link rel="stylesheet" href="https://cdn.labstack.com/css/prism.css">
  <link rel="stylesheet" href="https://cdn.labstack.com/css/base.css">
  <link rel="icon"
    type="image/png"
    href="https://cdn.labstack.com/images/labstack-icon.png">
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-85059636-2', 'auto');
    ga('send', 'pageview');
  </script>
</head>

<body class="docs">
	<div class="topnav">
  <nav class="w3-content">
    <a href="../index.html"><img class="logo" src="https://cdn.labstack.com/images/echo-logo.svg" alt="Echo"></a>
    <span class="hide-small">
      <i class="fa fa-search w3-text-gray"></i>
      <input id="search-box" type="text" class="w3-input">
    </span>
    <span class="menu hide-small hide-medium">
      
      
        <a class="active" href="../guide">Guide</a>
      
        <a href="../middleware">Middleware</a>
      
        <a href="../cookbook">Cookbook</a>
      
      <a href="https://forum.labstack.com">Forum</a>
    </span>
    <button class="hamburger hide-large" onclick="toggleSidenav()">
      <span></span>
    </button>
  </nav>
</div>

  <div class="w3-content">
    <nav class="sidenav">
  <div class="w3-container">
    <button class="w3-button w3-theme w3-round-large" onclick="location.href='/support-echo';">
      <i class="fa fa-heart" aria-hidden="true"></i> Support Echo
    </button>
    
    <div class="menu">
      
        <a class="active" href="../guide">
          Guide
        </a>
      
        <a href="../middleware">
          Middleware
        </a>
      
        <a href="../cookbook">
          Cookbook
        </a>
      
    </div>
    <div class="sub-menu">
      
        
          <h3><i class='fa fa-book'></i> Guide</h3>
          
            <a href="installation">
              Installation
            </a>
          
            <a href="customization/index.html">
              Customization
            </a>
          
            <a href="context">
              Context
            </a>
          
            <a href="cookies">
              Cookies
            </a>
          
            <a href="error-handling">
              Error Handling
            </a>
          
            <a href="faq">
              FAQ
            </a>
          
            <a href="migration">
              Migration
            </a>
          
            <a href="request/index.html">
              Request
            </a>
          
            <a href="response">
              Response
            </a>
          
            <a href="routing">
              Routing
            </a>
          
            <a href="static-files">
              Static Files
            </a>
          
            <a href="templates">
              Templates
            </a>
          
            <a class="active" href="testing">
              Testing
            </a>
          
        
      
    </div>
  </div>
</nav>

    <div class="main">
      

      <div class="ad">
  <script async type="text/javascript" src="https://cdn.carbonads.com/carbon.js?zoneid=1673&amp;serve=C6AILKT&amp;placement=echolabstackcom" id="_carbonads_js"></script>
</div>


      <div class="w3-row-padding">
        <div class="w3-col s12 m10 l10">
          <div class="w3-panel w3-pale-green w3-leftbar w3-border-green">
  <p>
    Check out <a href="../middleware/cube">cube middleware</a> for HTTP analytics. Measure server latency, data transfer, discover top endpoints, server errors and much more.
  </p>
</div>

          <article class="content">
            <section>
              <h1>Testing</h1>
              

<h2 id="testing-handler">Testing Handler</h2>

<p><code>GET</code> <code>/users/:id</code></p>

<p>Handler below retrieves user by id from the database. If user is not found it returns
<code>404</code> error with a message.</p>

<h3 id="createuser">CreateUser</h3>

<p><code>POST</code> <code>/users</code></p>

<ul>
<li>Accepts JSON payload</li>
<li>On success <code>201 - Created</code></li>
<li>On error <code>500 - Internal Server Error</code></li>
</ul>

<h3 id="getuser">GetUser</h3>

<p><code>GET</code> <code>/users/:email</code></p>

<ul>
<li>On success <code>200 - OK</code></li>
<li>On error <code>404 - Not Found</code> if user is not found otherwise <code>500 - Internal Server Error</code></li>
</ul>

<p><code>handler.go</code></p>

<pre><code class="language-go">package handler

import (
	&quot;net/http&quot;

	&quot;github.com/labstack/echo&quot;
)

type (
	User struct {
		Name  string `json:&quot;name&quot; form:&quot;name&quot;`
		Email string `json:&quot;email&quot; form:&quot;email&quot;`
	}
	handler struct {
		db map[string]*User
	}
)

func (h *handler) createUser(c echo.Context) error {
	u := new(User)
	if err := c.Bind(u); err != nil {
		return err
	}
	return c.JSON(http.StatusCreated, u)
}

func (h *handler) getUser(c echo.Context) error {
	email := c.Param(&quot;email&quot;)
	user := h.db[email]
	if user == nil {
		return echo.NewHTTPError(http.StatusNotFound, &quot;user not found&quot;)
	}
	return c.JSON(http.StatusOK, user)
}
</code></pre>

<p><code>handler_test.go</code></p>

<pre><code class="language-go">package handler

import (
	&quot;net/http&quot;
	&quot;net/http/httptest&quot;
	&quot;strings&quot;
	&quot;testing&quot;

	&quot;github.com/labstack/echo&quot;
	&quot;github.com/stretchr/testify/assert&quot;
)

var (
	mockDB = map[string]*User{
		&quot;jon@labstack.com&quot;: &amp;User{&quot;Jon Snow&quot;, &quot;jon@labstack.com&quot;},
	}
	userJSON = `{&quot;name&quot;:&quot;Jon Snow&quot;,&quot;email&quot;:&quot;jon@labstack.com&quot;}`
)

func TestCreateUser(t *testing.T) {
	// Setup
	e := echo.New()
	req := httptest.NewRequest(echo.POST, &quot;/&quot;, strings.NewReader(userJSON))
	req.Header.Set(echo.HeaderContentType, echo.MIMEApplicationJSON)
	rec := httptest.NewRecorder()
	c := e.NewContext(req, rec)
	h := &amp;handler{mockDB}

	// Assertions
	if assert.NoError(t, h.createUser(c)) {
		assert.Equal(t, http.StatusCreated, rec.Code)
		assert.Equal(t, userJSON, rec.Body.String())
	}
}

func TestGetUser(t *testing.T) {
	// Setup
	e := echo.New()
	req := httptest.NewRequest(echo.GET, &quot;/&quot;, nil)
	rec := httptest.NewRecorder()
	c := e.NewContext(req, rec)
	c.SetPath(&quot;/users/:email&quot;)
	c.SetParamNames(&quot;email&quot;)
	c.SetParamValues(&quot;jon@labstack.com&quot;)
	h := &amp;handler{mockDB}

	// Assertions
	if assert.NoError(t, h.getUser(c)) {
		assert.Equal(t, http.StatusOK, rec.Code)
		assert.Equal(t, userJSON, rec.Body.String())
	}
}
</code></pre>

<h3 id="using-form-payload">Using Form Payload</h3>

<pre><code class="language-go">f := make(url.Values)
f.Set(&quot;name&quot;, &quot;Jon Snow&quot;)
f.Set(&quot;email&quot;, &quot;jon@labstack.com&quot;)
req := httptest.NewRequest(echo.POST, &quot;/&quot;, strings.NewReader(f.Encode()))
req.Header.Set(echo.HandlerContentType, echo.MIMEApplicationForm)
</code></pre>

<h3 id="setting-path-params">Setting Path Params</h3>

<pre><code class="language-go">c.SetParamNames(&quot;id&quot;, &quot;email&quot;)
c.SetParamValues(&quot;1&quot;, &quot;jon@labstack.com&quot;)
</code></pre>

<h3 id="setting-query-params">Setting Query Params</h3>

<pre><code class="language-go">q := make(url.Values)
q.Set(&quot;email&quot;, &quot;jon@labstack.com&quot;)
req := http.NewRequest(echo.POST, &quot;/?&quot;+q.Encode(), nil)
</code></pre>

<h2 id="testing-middleware">Testing Middleware</h2>

<p><em>TBD</em></p>

<p>For now you can look into built-in middleware <a href="https://github.com/labstack/echo/tree/master/middleware">test cases</a>.</p>

            </section>
            <footer>
              <div class="w3-panel w3-pale-blue w3-leftbar w3-border-blue">
                <p>
                  <i class="fa fa-pencil" aria-hidden="true"></i>
                  <a href="https://github.com/labstack/echo/blob/master/website/content/guide/testing.md">
                    Edit this page on GitHub
                  </a>
                </p>
              </div>
            </footer>
          </article>
        </div>
      </div>
	    <footer class="w3-content w3-container w3-padding-48 w3-center footer">
  <p>
    <strong>Echo</strong> by <a href="https://labstack.com">LabStack</a> © 2017 LabStack
  </p>
  <p>
    <a class="icon" href="https://labstack.com/blog">
      <i class="fa fa-rss" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://github.com/labstack">
      <i class="fa fa-github" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://facebook.com/labstack">
      <i class="fa fa-facebook" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://twitter.com/labstack">
      <i class="fa fa-twitter" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://plus.google.com/+labstack">
      <i class="fa fa-google-plus" aria-hidden="true"></i>
    </a>
    <a class="icon" href="mailto:hello@labstack.com?Subject=Hello" target="_top">
      <i class="fa fa-envelope" aria-hidden="true"></i>
    </a>
  </p>
</footer>
<script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.js"></script>
<script type="text/javascript">
docsearch({
  apiKey: '69dfc65b57ccba29ec34b68aa5b274ed',
  indexName: 'labstack',
  inputSelector: '#search-box'
});
</script>
<script src="https://cdn.labstack.com/js/prism.js"></script>
<script src="https://cdn.labstack.com/js/base.js"></script>

    </div>
  </div>
</body>
</html>
