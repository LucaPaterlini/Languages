<!doctype html>
<html lang="en-us">
<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="description" content="Error handling in Echo | Echo is a high performance, extensible, minimalist web framework for Go (Golang).">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:site" content="@echo">
  <meta name="twitter:creator" content="@labstack">
  <meta name="twitter:title" content="Error Handling | Echo - High performance, minimalist Go web framework">
  <meta name="twitter:description" content="Error handling in Echo | Echo is a high performance, extensible, minimalist web framework for Go (Golang).">
  <meta name="twitter:image" content="https://echo.labstack.com/images/share.png">
  <meta property="og:type" content="website">
  <meta property="og:site_name" content="Error Handling">
  <meta property="og:title" content="Error Handling | Echo - High performance, minimalist Go web framework">
  <meta property="og:description" content="Error handling in Echo | Echo is a high performance, extensible, minimalist web framework for Go (Golang).">
  <meta property="og:url" content="https://echo.labstack.com">
  <meta property="og:image" content="https://echo.labstack.com/images/share.png">
  <title>
    Error Handling | Echo - High performance, minimalist Go web framework
  </title>
  <link rel="stylesheet"  
    href="https://unpkg.com/font-awesome@4.6.3/css/font-awesome.min.css">
  <link rel="stylesheet"
    href="https://cdn.labstack.com/css/icomoon.css">
  <link rel="stylesheet" 
    href="https://unpkg.com/docsearch.js@2.2.1/dist/cdn/docsearch.min.css">
  <link rel="stylesheet" href="../css/bsa.css">
  <link rel="stylesheet" href="https://cdn.labstack.com/css/w3.css">
  <link rel="stylesheet" href="https://cdn.labstack.com/css/prism.css">
  <link rel="stylesheet" href="https://cdn.labstack.com/css/base.css">
  <link rel="icon"
    type="image/png"
    href="https://cdn.labstack.com/images/labstack-icon.png">
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
    ga('create', 'UA-85059636-2', 'auto');
    ga('send', 'pageview');
  </script>
</head>

<body class="docs">
	<div class="topnav">
  <nav class="w3-content">
    <a href="../index.html"><img class="logo" src="https://cdn.labstack.com/images/echo-logo.svg" alt="Echo"></a>
    <span class="hide-small">
      <i class="fa fa-search w3-text-gray"></i>
      <input id="search-box" type="text" class="w3-input">
    </span>
    <span class="menu hide-small hide-medium">
      
      
        <a class="active" href="../guide">Guide</a>
      
        <a href="../middleware">Middleware</a>
      
        <a href="../cookbook">Cookbook</a>
      
      <a href="https://forum.labstack.com">Forum</a>
    </span>
    <button class="hamburger hide-large" onclick="toggleSidenav()">
      <span></span>
    </button>
  </nav>
</div>

  <div class="w3-content">
    <nav class="sidenav">
  <div class="w3-container">
    <button class="w3-button w3-theme w3-round-large" onclick="location.href='/support-echo';">
      <i class="fa fa-heart" aria-hidden="true"></i> Support Echo
    </button>
    
    <div class="menu">
      
        <a class="active" href="../guide">
          Guide
        </a>
      
        <a href="../middleware">
          Middleware
        </a>
      
        <a href="../cookbook">
          Cookbook
        </a>
      
    </div>
    <div class="sub-menu">
      
        
          <h3><i class='fa fa-book'></i> Guide</h3>
          
            <a href="installation">
              Installation
            </a>
          
            <a href="customization/index.html">
              Customization
            </a>
          
            <a href="context">
              Context
            </a>
          
            <a href="cookies">
              Cookies
            </a>
          
            <a class="active" href="error-handling">
              Error Handling
            </a>
          
            <a href="faq">
              FAQ
            </a>
          
            <a href="migration">
              Migration
            </a>
          
            <a href="request/index.html">
              Request
            </a>
          
            <a href="response">
              Response
            </a>
          
            <a href="routing">
              Routing
            </a>
          
            <a href="static-files">
              Static Files
            </a>
          
            <a href="templates">
              Templates
            </a>
          
            <a href="testing">
              Testing
            </a>
          
        
      
    </div>
  </div>
</nav>

    <div class="main">
      

      <div class="ad">
  <script async type="text/javascript" src="https://cdn.carbonads.com/carbon.js?zoneid=1673&amp;serve=C6AILKT&amp;placement=echolabstackcom" id="_carbonads_js"></script>
</div>


      <div class="w3-row-padding">
        <div class="w3-col s12 m10 l10">
          <div class="w3-panel w3-pale-green w3-leftbar w3-border-green">
  <p>
    Check out <a href="../middleware/cube">cube middleware</a> for HTTP analytics. Measure server latency, data transfer, discover top endpoints, server errors and much more.
  </p>
</div>

          <article class="content">
            <section>
              <h1>Error Handling</h1>
              

<p>Echo advocates for centralized HTTP error handling by returning error from middleware
and handlers. Centralized error handler allows us to log errors to external services
from a unified location and send a customized HTTP response to the client.</p>

<p>You can return a standard <code>error</code> or <code>echo.*HTTPError</code>.</p>

<p>For example, when basic auth middleware finds invalid credentials it returns
401 - Unauthorized error, aborting the current HTTP request.</p>

<pre><code class="language-go">e.Use(func(next echo.HandlerFunc) echo.HandlerFunc {
  return func(c echo.Context) error {
    // Extract the credentials from HTTP request header and perform a security
    // check

    // For invalid credentials
    return echo.NewHTTPError(http.StatusUnauthorized, &quot;Please provide valid credentials&quot;)

    // For valid credentials call next
    // return next(c)
  }
})
</code></pre>

<p>You can also use <code>echo.NewHTTPError()</code> without a message, in that case status text is used
as an error message. For example, &ldquo;Unauthorized&rdquo;.</p>

<h2 id="default-http-error-handler">Default HTTP Error Handler</h2>

<p>Echo provides a default HTTP error handler which sends error in a JSON format.</p>

<pre><code class="language-json">{
  &quot;message&quot;: &quot;error connecting to redis&quot;
}
</code></pre>

<p>For a standard <code>error</code>, response is sent as <code>500 - Internal Server Error</code>; however,
if you are running in a debug mode, the original error message is sent. If error
is <code>*HTTPError</code>, response is sent with the provided status code and message.
If logging is on, the error message is also logged.</p>

<h2 id="custom-http-error-handler">Custom HTTP Error Handler</h2>

<p>For most cases default error HTTP handler should be sufficient; however, a custom HTTP
error handler can come handy if you want to capture different type of errors and
take action accordingly e.g. send notification email or log error to a centralized
system. You can also send customized response to the client e.g. error page or
just a JSON response.</p>

<h3 id="error-pages">Error Pages</h3>

<p>The following custom HTTP error handler shows how to display error pages for different
type of errors and logs the error. The name of the error page should be like <code>&lt;CODE&gt;.html</code> e.g. <code>500.html</code>. You can look into this project
<a href="https://github.com/AndiDittrich/HttpErrorPages">https://github.com/AndiDittrich/HttpErrorPages</a> for pre-built error pages.</p>

<pre><code class="language-go">func customHTTPErrorHandler(err error, c echo.Context) {
	code := http.StatusInternalServerError
	if he, ok := err.(*echo.HTTPError); ok {
		code = he.Code
	}
	errorPage := fmt.Sprintf(&quot;%d.html&quot;, code)
	if err := c.File(errorPage); err != nil {
		c.Logger().Error(err)
	}
	c.Logger().Error(err)
}
</code></pre>

<blockquote>
<p>Instead of writing logs to the logger, you can also write them to an external service like Elasticsearch or Splunk.</p>
</blockquote>

            </section>
            <footer>
              <div class="w3-panel w3-pale-blue w3-leftbar w3-border-blue">
                <p>
                  <i class="fa fa-pencil" aria-hidden="true"></i>
                  <a href="https://github.com/labstack/echo/blob/master/website/content/guide/error-handling.md">
                    Edit this page on GitHub
                  </a>
                </p>
              </div>
            </footer>
          </article>
        </div>
      </div>
	    <footer class="w3-content w3-container w3-padding-48 w3-center footer">
  <p>
    <strong>Echo</strong> by <a href="https://labstack.com">LabStack</a> Â© 2017 LabStack
  </p>
  <p>
    <a class="icon" href="https://labstack.com/blog">
      <i class="fa fa-rss" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://github.com/labstack">
      <i class="fa fa-github" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://facebook.com/labstack">
      <i class="fa fa-facebook" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://twitter.com/labstack">
      <i class="fa fa-twitter" aria-hidden="true"></i>
    </a>
    <a class="icon" href="https://plus.google.com/+labstack">
      <i class="fa fa-google-plus" aria-hidden="true"></i>
    </a>
    <a class="icon" href="mailto:hello@labstack.com?Subject=Hello" target="_top">
      <i class="fa fa-envelope" aria-hidden="true"></i>
    </a>
  </p>
</footer>
<script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.js"></script>
<script type="text/javascript">
docsearch({
  apiKey: '69dfc65b57ccba29ec34b68aa5b274ed',
  indexName: 'labstack',
  inputSelector: '#search-box'
});
</script>
<script src="https://cdn.labstack.com/js/prism.js"></script>
<script src="https://cdn.labstack.com/js/base.js"></script>

    </div>
  </div>
</body>
</html>
